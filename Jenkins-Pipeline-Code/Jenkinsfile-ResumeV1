pipeline {
    agent any 
    // environment  {
    //     SCANNER_HOME=tool 'sonar-scanner'
    // }
    stages {
        // stage('Cleaning Workspace') {
        //     steps {
        //         cleanWs()
        //     }
        // }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/Gerardbulky/End-to-End-Kubernetes-DevSecOps-Resume-Project.git'
            }
        }
        // stage('Sonarqube Analysis') {
        //     steps {
        //         dir('Resume-V1') {
        //             withSonarQubeEnv('sonar-server') {
        //                 sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=ResumeVersion1.0 \
        //                 -Dsonar.projectKey=ResumeVersion1.0 '''
        //             }
        //         }
        //     }
        // }
        // stage('Quality Check') {
        //     steps {
        //         script {
        //             waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
        //         }
        //     }
        // }
        // stage('Installing Dependencies') {
        //     steps {
        //         dir('Resume-V1') {
        //             sh 'npm install'
        //         }
        //     }
        // }
        // stage('OWASP Dependency-Check Scan') {
        //     steps {
        //         dir('Resume-V1') {
        //             dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
        //             dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
        //         }
        //     }
        // }
        // stage('Trivy File Scan') {
        //     steps {
        //         dir('Resume-V1') {
        //             sh 'trivy fs . > trivyfs.txt'
        //         }
        //     }
        // }
        stage("Docker Image Build") {
            steps {
                script {
                    dir('resume-app') {
                        withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {   
                            sh 'docker system prune -f'
                            sh 'docker container prune -f'
                            sh 'docker build -t resumev1 .'
                        }
                    }
                }
            }
        }
        stage("Docker Image Pushing") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {   
                        sh 'docker tag resumev1 bossmanjerry/resumev1:${BUILD_NUMBER}'
                        sh 'docker push bossmanjerry/resumev1:${BUILD_NUMBER}'
                    }
                }
            }
        }
        // stage("TRIVY Image Scan") {
        //     steps {
        //         sh 'trivy image bossmanjerry/resumev1:${BUILD_NUMBER} > trivyimage.txt' 
        //     }
        // }
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Gerardbulky/End-to-End-Kubernetes-DevSecOps-Resume-Project.git'
            }
        }
        stage('Update Deployment file') {
            environment {
                GIT_REPO_NAME = "End-to-End-Kubernetes-DevSecOps-Resume-Project"
                GIT_USER_NAME = "Gerardbulky"
            }
            steps {
                dir('Manifest-file') {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config user.email "gerardambe@yahoo.com"
                            git config user.name "Gerardbulky"
                            
                            BUILD_NUMBER=${BUILD_NUMBER}
                            echo $BUILD_NUMBER
                            imageTag=$(grep -oP '(?<=resumev1:)[^ ]+' deployment-service.yml)
                            echo $imageTag
                            
                            sed -i "s/resumev1:${imageTag}/resumev1:${BUILD_NUMBER}/" deployment-service.yml
                            
                            git add deployment-service.yml
                            git commit -m "Update deployment Image to version \${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                        '''
                    }
                }
            }
        }
    }
}